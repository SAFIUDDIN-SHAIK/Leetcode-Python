class Solution:

    def stoneGameII(self, piles: List[int]) -> int:

        n = len(piles)
        self.l = []

        for i in range(n):

            temp = [0] * n
            self.l.append(temp)
        
        self.ss = [i for i in piles]

        for i in range(n - 2, -1, -1):

            self.ss[i] += self.ss[i + 1]
        
        return self.f(0, 1)
    
    def f(self, i, M):

        if i + 2 * M >= len(self.l):

            return self.ss[i]
        
        if self.l[i][M] > 0:

            return self.l[i][M]
        
        bob = self.ss[i]

        for j in range(1, 2 * M + 1):

            bob = min(bob, self.f(i + j, max(M, j)))

        self.l[i][M] = self.ss[i] - bob

        return self.l[i][M]
